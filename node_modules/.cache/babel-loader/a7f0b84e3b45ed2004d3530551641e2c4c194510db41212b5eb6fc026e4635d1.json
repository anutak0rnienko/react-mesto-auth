{"ast":null,"code":"class Api {\n  constructor(apiConfig) {\n    this._url = apiConfig.url;\n    this._headers = apiConfig.headers;\n  }\n  getInitialCardsApi() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this._checkError(res));\n  }\n  getUserInfoApi() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(res => this._checkError(res));\n  }\n  addCardElements(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._checkError(res));\n  }\n  editProfile(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._checkError(res));\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._checkError(res));\n  }\n\n  // putCardLike(cardId) {\n  //     return fetch(`${this._url}/cards/${cardId}/likes`, {\n  //         method: \"PUT\",\n  //         headers: this._headers,\n  //     }).then((res) => this._checkError(res));\n  // }\n\n  // deleteCardLike(cardId) {\n  //     return fetch(`${this._url}/cards/${cardId}/likes`, {\n  //         method: \"DELETE\",\n  //         headers: this._headers,\n  //     }).then((res) => this._checkError(res));\n  // }\n\n  editProfileAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data)\n    }).then(res => this._checkError(res));\n  }\n  _checkError(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${!isLiked ? 'DELETE' : 'PUT'}`,\n      headers: this._headers\n    }).then(res => this._checkError(res));\n  }\n}\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-65\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    authorization: \"a78ff19e-0d6f-4d15-9950-0c2176ee362c\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","apiConfig","_url","url","_headers","headers","getInitialCardsApi","fetch","method","then","res","_checkError","getUserInfoApi","addCardElements","data","body","JSON","stringify","editProfile","name","about","deleteCard","cardId","editProfileAvatar","ok","json","Promise","reject","status","changeLikeCardStatus","isLiked","api","authorization"],"sources":["/Users/annakornienko/Desktop/practicum/mesto-react/src/utils/api.js"],"sourcesContent":["class Api {\n    constructor(apiConfig) {\n        this._url = apiConfig.url;\n        this._headers = apiConfig.headers;\n    }\n\n    getInitialCardsApi() {\n        return fetch(`${this._url}/cards`, {\n            method: \"GET\",\n            headers: this._headers,\n        }).then((res) => this._checkError(res));\n    }\n\n    getUserInfoApi() {\n        return fetch(`${this._url}/users/me`, {\n            method: \"GET\",\n            headers: this._headers,\n        }).then((res) => this._checkError(res));\n    }\n\n    addCardElements(data) {\n        return fetch(`${this._url}/cards`, {\n            method: \"POST\",\n            headers: this._headers,\n            body: JSON.stringify(data),\n        }).then((res) => this._checkError(res));\n    }\n\n    editProfile(data) {\n        return fetch(`${this._url}/users/me`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about,\n            }),\n        }).then((res) => this._checkError(res));\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this._headers,\n        }).then((res) => this._checkError(res));\n    }\n\n    // putCardLike(cardId) {\n    //     return fetch(`${this._url}/cards/${cardId}/likes`, {\n    //         method: \"PUT\",\n    //         headers: this._headers,\n    //     }).then((res) => this._checkError(res));\n    // }\n\n    // deleteCardLike(cardId) {\n    //     return fetch(`${this._url}/cards/${cardId}/likes`, {\n    //         method: \"DELETE\",\n    //         headers: this._headers,\n    //     }).then((res) => this._checkError(res));\n    // }\n\n    editProfileAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this._headers,\n            body: JSON.stringify(data),\n        }).then((res) => this._checkError(res));\n    }\n\n    _checkError(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        return fetch(`${this._url}/cards/${cardId}/likes`, {\n            method:`${!isLiked ? 'DELETE' : 'PUT'}`,\n            headers: this._headers\n        }).then((res) => this._checkError(res));\n    }\n}\n\nconst api = new Api({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-65\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"a78ff19e-0d6f-4d15-9950-0c2176ee362c\",\n    },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}