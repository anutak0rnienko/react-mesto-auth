{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport function register(email, password) {\n  return fetch(`${BASE_URL}/singup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => checkError(res));\n}\nexport function authorize(email, password) {\n  return fetch(`${BASE_URL}/singin`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => checkError(res));\n}\nexport function getContent(jwt) {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${jwt}`\n    }\n  }).then(res => checkError(res));\n}\nfunction checkError(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`${res.status}`);\n}","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","checkError","authorize","getContent","jwt","Authorization","ok","json","Promise","reject","status"],"sources":["/Users/annakornienko/Desktop/practicum/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport function register(email, password) {\n    return fetch(`${BASE_URL}/singup`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n            \"password\": password,\n            \"email\": email\n         }),\n    }).then((res) => checkError(res));\n}\n\nexport function authorize(email, password) {\n    return fetch(`${BASE_URL}/singin`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n            \"password\": password,\n            \"email\": email\n         }),\n    }).then((res) => checkError(res));\n}\n\nexport function getContent(jwt) {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${jwt}`,\n        },\n    }).then((res) => checkError(res));\n}\n\nfunction checkError(res) {\n    if (res.ok) {\n        return res.json();\n    }\n    return Promise.reject(`${res.status}`);\n}\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACtC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAC/BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjB,UAAU,EAAEN,QAAQ;MACpB,OAAO,EAAED;IACZ,CAAC;EACN,CAAC,CAAC,CAACQ,IAAI,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,CAAC,CAAC;AACrC;AAEA,OAAO,SAASE,SAASA,CAACX,KAAK,EAAEC,QAAQ,EAAE;EACvC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAQ,EAAE;IAC/BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACjB,UAAU,EAAEN,QAAQ;MACpB,OAAO,EAAED;IACZ,CAAC;EACN,CAAC,CAAC,CAACQ,IAAI,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,CAAC,CAAC;AACrC;AAEA,OAAO,SAASG,UAAUA,CAACC,GAAG,EAAE;EAC5B,OAAOX,KAAK,CAAE,GAAEJ,QAAS,WAAU,EAAE;IACjCK,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClCU,aAAa,EAAG,UAASD,GAAI;IACjC;EACJ,CAAC,CAAC,CAACL,IAAI,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,CAAC,CAAC;AACrC;AAEA,SAASC,UAAUA,CAACD,GAAG,EAAE;EACrB,IAAIA,GAAG,CAACM,EAAE,EAAE;IACR,OAAON,GAAG,CAACO,IAAI,CAAC,CAAC;EACrB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,GAAET,GAAG,CAACU,MAAO,EAAC,CAAC;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}